name: Release Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize ]

jobs:

  lint:
    if:       "!contains(github.event.head_commit.message, 'ci skip')"
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Node Modules (all)
        uses: bahmutov/npm-install@v1
        with:
          install-command: make install
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Lint
        run: make lint

  compile:
    if:       "!contains(github.event.head_commit.message, 'ci skip')"
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Node Modules (all)
        uses: bahmutov/npm-install@v1
        with:
          install-command: make install
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Compile
        run: make compile

      - name: Compress Libs
        run:  7z a compiled-libs.zip package.json "integration/*/lib/*" "packages/*/lib/*"
      - uses: actions/upload-artifact@v2
        with:
          retention-days: 3
          name: compiled-libs
          path: |
            compiled-libs.zip

  test-linux-node-lts-active:
    name: test-linux-node-lts-active
    needs:
      - compile
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Node Modules (@serenity-js)
        uses: bahmutov/npm-install@v1
        with:
          install-command: make BOOTSTRAP=@serenity-js install
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Decompress Libs
        run:  7z x -aoa compiled-libs.zip

      - name: Test
        run: make test

      - uses: actions/upload-artifact@v2
        with:
          retention-days: 3
          name: test-reports
          path: |
            target/**/*
            package.json

  test-linux-node-lts-previous:
    needs:
      - compile
    runs-on:  ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Install Node Modules (@serenity-js)
        uses: bahmutov/npm-install@v1
        with:
          install-command: make BOOTSTRAP=@serenity-js install
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Decompress Libs
        run:  7z x -aoa compiled-libs.zip

      - name: Test
        run: make test

  test-windows-node-lts-active:
    needs:
      - compile
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Node Modules (@serenity-js)
        uses: bahmutov/npm-install@v1
        with:
          install-command: make BOOTSTRAP=@serenity-js install
        env:
          CHROMEDRIVER_FILEPATH: "C:\\SeleniumWebDrivers\\ChromeDriver\\chromedriver.exe"

      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Decompress Libs
        run:  7z.exe x -aoa compiled-libs.zip
      - name: Test
        run: make test

  integration-test-saucelabs:
    needs:
      - compile
    runs-on: ubuntu-latest
    steps:
      - name: Open Sauce Connect Tunnel
        uses: saucelabs/sauce-connect-action@v1
        with:
          username: ${{ secrets.SAUCE_USERNAME }}
          accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
          tunnelIdentifier: github-serenity-js-integration-test-saucelabs-${{ github.run_number }}-tunnel

      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Node Modules (@integration)
        uses: bahmutov/npm-install@v1
        with:
          install-command: make BOOTSTRAP=@integration install
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Decompress Libs
        run: 7z x -aoa compiled-libs.zip

      - name: Integration Test
        run: make INTEGRATION=saucelabs integration-test
        env:
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
          SAUCE_TUNNEL_ID: github-serenity-js-integration-test-saucelabs-${{ github.run_number }}-tunnel

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: integration-test-saucelabs
          path: integration/webdriverio-web/target/

      - uses: actions/upload-artifact@v2
        with:
          retention-days: 3
          name: integration-test-saucelabs-coverage-reports
          path: |
            target/**/*
            package.json

  integration-test:
    needs:
      - compile
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module:
          - cucumber-1
          - cucumber-2
          - cucumber-3
          - cucumber-4
          - cucumber-5
          - cucumber-6
          - cucumber-7
          - jasmine
          - mocha
          - protractor
          - webdriverio
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Node Modules (@integration)
        uses: bahmutov/npm-install@v1
        with:
          install-command: make BOOTSTRAP=@integration install
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Decompress Libs
        run: 7z x -aoa compiled-libs.zip

      - name: Integration Test
        run: make INTEGRATION=${{ matrix.module }} integration-test

      - uses: actions/upload-artifact@v2
        with:
          if: failure()
          retention-days: 3
          name: integration-test-reports-${{ matrix.module }}
          path: |
            integration/**/target/**/*
            package.json

      - uses: actions/upload-artifact@v2
        with:
          retention-days: 2
          name: integration-test-coverage-reports-${{ matrix.module }}
          path: |
            target/**/*
            package.json

  report:
    runs-on:  ubuntu-latest
    needs:
      - test-linux-node-lts-active
      - integration-test-saucelabs
      - integration-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Node Modules (root)
        uses: bahmutov/npm-install@v1
        with:
          install-command: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Download code coverage reports (test)
        uses: actions/download-artifact@v2
        with:
          name: test-reports

      - name: Download code coverage reports
        uses: actions/download-artifact@v2
        with:
          path: target/coverage

      # DEBUG
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: target/coverage

      - name: Merge code coverage reports
        run: make report

      - uses: actions/upload-artifact@v2
        with:
          retention-days: 3
          name: code-coverage
          path: ./target/coverage

      - name: Publish coverage
        continue-on-error: true
        if: github.ref == 'refs/heads/master'
        run: npm run coverage:publish
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

  release:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs:
      - lint
      - test-linux-node-lts-active
      - test-linux-node-lts-previous
      - test-windows-node-lts-active
      - integration-test-saucelabs
      - integration-test
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-lerna
        with:
          github_token:   ${{ secrets.GITHUB_TOKEN }}
          git_user_email: ${{ secrets.RELEASE_GH_EMAIL }}
          git_username:   ${{ secrets.RELEASE_GH_USERNAME }}
          npm_token:      ${{ secrets.NPM_TOKEN }}
      - name: Download compiled libs
        uses: actions/download-artifact@v2
        with:
          name: compiled-libs
      - name: Decompress Libs
        run:  7z x -aoa compiled-libs.zip
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Node Modules (root)
        uses: bahmutov/npm-install@v1
        with:
          install-command: npm ci
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Publish artifacts
        run: npm run lerna:publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v2
        with:
          retention-days: 3
          name: changelog
          path: |
            CHANGELOG.md

  site:
    runs-on: ubuntu-latest
    needs:
      - release
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: ./.github/actions/setup-lerna
        if: github.ref == 'refs/heads/master'
        with:
          github_token:   ${{ secrets.GITHUB_TOKEN }}
          git_user_email: ${{ secrets.RELEASE_GH_EMAIL }}
          git_username:   ${{ secrets.RELEASE_GH_USERNAME }}
          npm_token:      ${{ secrets.NPM_TOKEN }}
      - name: Download changelog
        if: needs.release.result == 'success'
        uses: actions/download-artifact@v2
        with:
          name: changelog
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Node Modules (@documentation)
        uses: bahmutov/npm-install@v1
        with:
          install-command: make BOOTSTRAP=@documentation install
        env:
          CHROMEDRIVER_FILEPATH: "/usr/bin/chromedriver"

      - name: Build Serenity/JS website
        run: make site

      - name: Publish website
        if: github.ref == 'refs/heads/master'
        run: npm run site:publish
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
